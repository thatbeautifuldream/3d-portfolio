/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { useSpring, animated } from '@react-spring/three'
import * as THREE from 'three'

export function Model(props: any) {
    const groupRef = useRef<THREE.Group>(null)
    const { nodes, materials } = useGLTF('/nextjs.gltf') as any
    const [hovered, setHovered] = useState(false)
    const [clicked, setClicked] = useState(false)

    // Animation for rotation
    useFrame((state, delta) => {
        if (groupRef.current) {
            // Continuous slow rotation
            groupRef.current.rotation.y += delta * 0.2

            // Floating animation
            groupRef.current.position.y = Math.sin(state.clock.elapsedTime) * 0.3

            // Scale pulsing when clicked
            if (clicked) {
                groupRef.current.scale.setScalar(1 + Math.sin(state.clock.elapsedTime * 4) * 0.1)
            }
        }
    })

    // Spring animation for hover effects
    const { scale, color } = useSpring({
        scale: hovered ? 1.1 : 1,
        color: hovered ? '#ff6b6b' : '#ffffff',
        config: { mass: 1, tension: 280, friction: 60 }
    })

    const handleClick = () => {
        setClicked(!clicked)
        console.log('Model clicked!', clicked ? 'Stopping pulse' : 'Starting pulse')
    }

    const handlePointerOver = () => {
        setHovered(true)
        document.body.style.cursor = 'pointer'
    }

    const handlePointerOut = () => {
        setHovered(false)
        document.body.style.cursor = 'auto'
    }

    return (
        <animated.group
            ref={groupRef}
            {...props}
            dispose={null}
            scale={scale}
            onClick={handleClick}
            onPointerOver={handlePointerOver}
            onPointerOut={handlePointerOut}
        >
            <group rotation={[0, Math.PI / 4, 0]} scale={[0.254, -0.254, 0.254]}>
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_0.geometry}
                    material={nodes.mesh_0.material}
                    position={[-197, -39.716, -2.5]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_1.geometry}
                    material={nodes.mesh_1.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_2.geometry}
                    material={nodes.mesh_2.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_3.geometry}
                    material={nodes.mesh_3.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_4.geometry}
                    material={nodes.mesh_4.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_5.geometry}
                    material={nodes.mesh_5.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_6.geometry}
                    material={nodes.mesh_6.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
                <animated.mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_7.geometry}
                    material={nodes.mesh_7.material}
                    position={[-197, -39.716, -2.5]}
                    scale={[1.01, 1.01, 1.06]}
                />
            </group>
        </animated.group>
    )
}

useGLTF.preload('/nextjs.gltf')